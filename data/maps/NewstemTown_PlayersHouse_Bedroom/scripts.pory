mapscripts NewstemTown_PlayersHouse_Bedroom_MapScripts {
    MAP_SCRIPT_ON_FRAME_TABLE [ 
        VAR_STARTED_GAME, 0: NewstemTown_DefaultSettings
    ]
}

script NewstemTown_DefaultSettings {
    setflag(FLAG_SYS_B_DASH)
    setflag(FLAG_SHARED_EXP)
    setflag(FLAG_USE_NEW_TYPE_CHART)
    setvar(VAR_STARTED_GAME, 1)
    call(Generic_UPDATE_LEVELCAP)
    
    // % chance
    setvar(VAR_WILD_BATTLE_CHANCE, 15)
    
    // % increase. EG: 20 = 1.2x experience. Set to 0 for no bonus.
    setvar(VAR_INCREASE_EXP_GAIN, 50) 
    releaseall
}

script NewstemTown_PlayersHouse_Bedroom_Settings {
    lockall
    message(format("This is where you edit the game's difficulty and QoL settings."))
    multichoice(25, 0, MULTI_QOL_OPTIONS, 0)
    closemessage
    switch(var(VAR_RESULT)) {
        case 0:
            message(format("All Pokemon in the party gain exp, not just the ones used in battle."))
            multichoice(25, 5, MULTI_GENERIC_ONOFF, 0)
            closemessage
            if (var(VAR_RESULT) == 0) { 
                setflag(FLAG_SHARED_EXP)
            } else { clearflag(FLAG_SHARED_EXP) }
            goto(NewstemTown_PlayersHouse_Bedroom_Settings)
            
        case 1:
            message(format("Use the new Ice Type interactions. Grants Water and Grass resist."))
            multichoice(25, 5, MULTI_GENERIC_ONOFF, 0)
            closemessage
            if (var(VAR_RESULT) == 0) { 
                setflag(FLAG_USE_NEW_TYPE_CHART)
            } else { clearflag(FLAG_USE_NEW_TYPE_CHART) }
            goto(NewstemTown_PlayersHouse_Bedroom_Settings)

        case 2:
            message(format("Experience is boosted 1.5x."))
            multichoice(25, 5, MULTI_GENERIC_ONOFF, 0)
            closemessage
            if (var(VAR_RESULT) == 0) { 
                setvar(VAR_INCREASE_EXP_GAIN, 150)
            } else { setvar(VAR_INCREASE_EXP_GAIN, 0) }
            goto(NewstemTown_PlayersHouse_Bedroom_Settings)
        
        case 3:
            message(format("Wild encounters have a chance of being a double battle."))
            multichoice(25, 5, MULTI_GENERIC_ONOFF, 0)
            closemessage
            if (var(VAR_RESULT) == 0) { 
                setvar(VAR_WILD_BATTLE_CHANCE, 15)
            } else { setvar(VAR_WILD_BATTLE_CHANCE, 0) }
            goto(NewstemTown_PlayersHouse_Bedroom_Settings)

        case 4:
            message(format("Pokemon cannot be levelled above the next main 'boss encounter's level."))
            multichoice(25, 5, MULTI_GENERIC_ONOFF, 0)
            closemessage
            if (var(VAR_RESULT) == 0) {
                call(Generic_UPDATE_LEVELCAP)
            } else { setvar(VAR_CURRENT_LEVEL_CAP, 100) }
            goto(NewstemTown_PlayersHouse_Bedroom_Settings)

        default:
            releaseall
            end
    }
    releaseall
}

script NewstemTown_PlayersHouse_Bedroom_PC {
    call(LittlerootTown_BrendansHouse_2F_EventScript_CheckPlayersPC)
}

// Goes through and updates the level cap based on milestone
script Generic_UPDATE_LEVELCAP {
    setvar(VAR_CURRENT_LEVEL_CAP, 15)

    if (flag(FLAG_BADGE01_GET)) {
        addvar(VAR_CURRENT_LEVEL_CAP, 7) // 22
    }

    if (flag(FLAG_BADGE02_GET)) {
        addvar(VAR_CURRENT_LEVEL_CAP, 78) // 100
    }

    return
}

script Generic_GYM_LEVEL_GUIDE {
    lockall
    if (var(VAR_CURRENT_LEVEL_CAP) != 100) {
        buffernumberstring(STR_VAR_1, VAR_CURRENT_LEVEL_CAP)
        msgbox("Recommended Level:\n{STR_VAR_1}", MSGBOX_SIGN)
    } else {
        call(Generic_UPDATE_LEVELCAP)
        buffernumberstring(STR_VAR_1, VAR_CURRENT_LEVEL_CAP)
        msgbox("Recommended Level:\n{STR_VAR_1}", MSGBOX_SIGN)
        setvar(VAR_CURRENT_LEVEL_CAP, 100)
    }
    releaseall
}

//script NewstemTown_DEBUG {
//    lockall
//    givemon(SPECIES_TURTWIG, 1)
//    istypeinparty(TYPE_GRASS)
//    if (var(VAR_RESULT) == YES) {
//        msgbox("Yeah")
//    }
//    releaseall
//}